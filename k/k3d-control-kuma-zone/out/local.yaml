apiVersion: v1
kind: Namespace
metadata:
  name: kuma
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: circuitbreakers.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: CircuitBreaker
    listKind: CircuitBreakerList
    plural: circuitbreakers
    singular: circuitbreaker
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma CircuitBreaker resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: containerpatches.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: ContainerPatch
    listKind: ContainerPatchList
    plural: containerpatches
    singular: containerpatch
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ContainerPatch stores a list of patches to apply to init and
          sidecar containers.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            type: string
          metadata:
            type: object
          spec:
            description: ContainerPatchSpec specifies the options available for a
              ContainerPatch
            properties:
              initPatch:
                description: InitPatch specifies jsonpatch to apply to an init container.
                items:
                  description: JsonPatchBlock is one json patch operation block.
                  properties:
                    from:
                      description: From is a jsonpatch from string, used by move and
                        copy operations.
                      type: string
                    op:
                      description: Op is a jsonpatch operation string.
                      enum:
                      - add
                      - remove
                      - replace
                      - move
                      - copy
                      type: string
                    path:
                      description: Path is a jsonpatch path string.
                      type: string
                    value:
                      description: Value must be a string representing a valid json
                        object used by replace and add operations. String has to be
                        escaped with " to be valid a json object.
                      type: string
                  required:
                  - op
                  - path
                  type: object
                type: array
              sidecarPatch:
                description: SidecarPatch specifies jsonpatch to apply to a sidecar
                  container.
                items:
                  description: JsonPatchBlock is one json patch operation block.
                  properties:
                    from:
                      description: From is a jsonpatch from string, used by move and
                        copy operations.
                      type: string
                    op:
                      description: Op is a jsonpatch operation string.
                      enum:
                      - add
                      - remove
                      - replace
                      - move
                      - copy
                      type: string
                    path:
                      description: Path is a jsonpatch path string.
                      type: string
                    value:
                      description: Value must be a string representing a valid json
                        object used by replace and add operations. String has to be
                        escaped with " to be valid a json object.
                      type: string
                  required:
                  - op
                  - path
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: dataplaneinsights.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: DataplaneInsight
    listKind: DataplaneInsightList
    plural: dataplaneinsights
    singular: dataplaneinsight
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          status:
            description: Status is the status the Kuma resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: dataplanes.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: Dataplane
    listKind: DataplaneList
    plural: dataplanes
    singular: dataplane
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma Dataplane resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: externalservices.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: ExternalService
    listKind: ExternalServiceList
    plural: externalservices
    singular: externalservice
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ExternalService resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: faultinjections.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: FaultInjection
    listKind: FaultInjectionList
    plural: faultinjections
    singular: faultinjection
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma FaultInjection resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: healthchecks.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: HealthCheck
    listKind: HealthCheckList
    plural: healthchecks
    singular: healthcheck
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma HealthCheck resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: meshes.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma Mesh resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: meshgatewayinstances.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: MeshGatewayInstance
    listKind: MeshGatewayInstanceList
    plural: meshgatewayinstances
    singular: meshgatewayinstance
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MeshGatewayInstance represents a managed instance of a dataplane
          proxy for a Kuma Gateway.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MeshGatewayInstanceSpec specifies the options available for
              a GatewayDataplane.
            properties:
              replicas:
                default: 1
                description: Replicas is the number of dataplane proxy replicas to
                  create. For now this is a fixed number, but in the future it could
                  be automatically scaled based on metrics.
                format: int32
                minimum: 1
                type: integer
              resources:
                description: Resources specifies the compute resources for the proxy
                  container. The default can be set in the control plane config.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceTemplate:
                description: ServiceTemplate configures the Service owned by this
                  config.
                properties:
                  metadata:
                    description: Metadata holds metadata configuration for a Service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations holds annotations to be set on a
                          Service.
                        type: object
                    type: object
                  spec:
                    description: Spec holds some customizable fields of a Service.
                    properties:
                      loadBalancerIP:
                        description: LoadBalancerIP corresponds to ServiceSpec.LoadBalancerIP.
                        type: string
                    type: object
                type: object
              serviceType:
                default: LoadBalancer
                description: ServiceType specifies the type of managed Service that
                  will be created to expose the dataplane proxies to traffic from
                  outside the cluster. The ports to expose will be taken from the
                  matching Gateway resource. If there is no matching Gateway, the
                  managed Service will be deleted.
                enum:
                - LoadBalancer
                - ClusterIP
                - NodePort
                type: string
              tags:
                additionalProperties:
                  type: string
                description: Tags specifies the Kuma tags that are propagated to the
                  managed dataplane proxies. These tags should include exactly one
                  `kuma.io/service` tag, and should match exactly one Gateway resource.
                type: object
            type: object
          status:
            description: MeshGatewayInstanceStatus holds information about the status
              of the gateway instance.
            properties:
              conditions:
                description: Conditions is an array of gateway instance conditions.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              loadBalancer:
                description: LoadBalancer contains the current status of the load-balancer,
                  if one is present.
                properties:
                  ingress:
                    description: Ingress is a list containing ingress points for the
                      load-balancer. Traffic intended for the service should be sent
                      to these ingress points.
                    items:
                      description: 'LoadBalancerIngress represents the status of a
                        load-balancer ingress point: traffic intended for the service
                        should be sent to an ingress point.'
                      properties:
                        hostname:
                          description: Hostname is set for load-balancer ingress points
                            that are DNS based (typically AWS load-balancers)
                          type: string
                        ip:
                          description: IP is set for load-balancer ingress points
                            that are IP based (typically GCE or OpenStack load-balancers)
                          type: string
                        ports:
                          description: Ports is a list of records of service ports
                            If used, every port defined in the service should have
                            an entry in it
                          items:
                            properties:
                              error:
                                description: 'Error is to record the problem with
                                  the service port The format of the error shall comply
                                  with the following rules: - built-in error values
                                  shall be specified in this file and those shall
                                  use CamelCase names - cloud provider specific error
                                  values must have names that comply with the format
                                  foo.example.com/CamelCase. --- The regex it matches
                                  is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              port:
                                description: Port is the port number of the service
                                  port of which status is recorded here
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: 'Protocol is the protocol of the service
                                  port of which status is recorded here The supported
                                  values are: "TCP", "UDP", "SCTP"'
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: meshgatewayroutes.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: MeshGatewayRoute
    listKind: MeshGatewayRouteList
    plural: meshgatewayroutes
    singular: meshgatewayroute
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma MeshGatewayRoute resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: meshgateways.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: MeshGateway
    listKind: MeshGatewayList
    plural: meshgateways
    singular: meshgateway
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma MeshGateway resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: meshinsights.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: MeshInsight
    listKind: MeshInsightList
    plural: meshinsights
    singular: meshinsight
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma MeshInsight resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: proxytemplates.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: ProxyTemplate
    listKind: ProxyTemplateList
    plural: proxytemplates
    singular: proxytemplate
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ProxyTemplate resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: ratelimits.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: RateLimit
    listKind: RateLimitList
    plural: ratelimits
    singular: ratelimit
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma RateLimit resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: retries.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: Retry
    listKind: RetryList
    plural: retries
    singular: retry
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma Retry resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: serviceinsights.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: ServiceInsight
    listKind: ServiceInsightList
    plural: serviceinsights
    singular: serviceinsight
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ServiceInsight resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: timeouts.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: Timeout
    listKind: TimeoutList
    plural: timeouts
    singular: timeout
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma Timeout resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: trafficlogs.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: TrafficLog
    listKind: TrafficLogList
    plural: trafficlogs
    singular: trafficlog
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma TrafficLog resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: trafficpermissions.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: TrafficPermission
    listKind: TrafficPermissionList
    plural: trafficpermissions
    singular: trafficpermission
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma TrafficPermission resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: trafficroutes.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: TrafficRoute
    listKind: TrafficRouteList
    plural: trafficroutes
    singular: trafficroute
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma TrafficRoute resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: traffictraces.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: TrafficTrace
    listKind: TrafficTraceList
    plural: traffictraces
    singular: traffictrace
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma TrafficTrace resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: virtualoutbounds.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: VirtualOutbound
    listKind: VirtualOutboundList
    plural: virtualoutbounds
    singular: virtualoutbound
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma VirtualOutbound resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: zoneegresses.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: ZoneEgress
    listKind: ZoneEgressList
    plural: zoneegresses
    singular: zoneegress
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ZoneEgress resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: zoneegressinsights.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: ZoneEgressInsight
    listKind: ZoneEgressInsightList
    plural: zoneegressinsights
    singular: zoneegressinsight
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ZoneEgressInsight resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: zoneingresses.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: ZoneIngress
    listKind: ZoneIngressList
    plural: zoneingresses
    singular: zoneingress
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ZoneIngress resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: zoneingressinsights.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: ZoneIngressInsight
    listKind: ZoneIngressInsightList
    plural: zoneingressinsights
    singular: zoneingressinsight
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ZoneIngressInsight
              resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: zoneinsights.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: ZoneInsight
    listKind: ZoneInsightList
    plural: zoneinsights
    singular: zoneinsight
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ZoneInsight resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: zones.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: Zone
    listKind: ZoneList
    plural: zones
    singular: zone
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma Zone resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-control-plane
  namespace: kuma
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kuma-egress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-egress
  namespace: kuma
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-ingress
  namespace: kuma
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-install-missing-crds
  namespace: kuma
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-patch-ns-job
  namespace: kuma
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-pre-delete-job
  namespace: kuma
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-control-plane
  namespace: kuma
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-patch-ns-job
  namespace: kuma
rules:
- apiGroups:
  - ""
  resourceNames:
  - kuma
  resources:
  - namespaces
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - configmaps
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - referencegrants
  - httproutes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - gateways/status
  - httproutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - delete
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - kuma.io
  resources:
  - dataplanes
  - dataplaneinsights
  - meshes
  - zones
  - zoneinsights
  - zoneingresses
  - zoneingressinsights
  - zoneegresses
  - zoneegressinsights
  - meshinsights
  - serviceinsights
  - proxytemplates
  - ratelimits
  - trafficpermissions
  - trafficroutes
  - timeouts
  - retries
  - circuitbreakers
  - virtualoutbounds
  - containerpatches
  - externalservices
  - faultinjections
  - healthchecks
  - trafficlogs
  - traffictraces
  - meshgateways
  - meshgatewayroutes
  - meshgatewayinstances
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kuma.io
  resources:
  - meshgatewayinstances/status
  - meshgatewayinstances/finalizers
  - meshes/finalizers
  - dataplanes/finalizers
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-install-missing-crds
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-pre-delete-job
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - kuma-validating-webhook-configuration
  resources:
  - validatingwebhookconfigurations
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-control-plane
  namespace: kuma
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-patch-ns-job
  namespace: kuma
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
- kind: ServiceAccount
  name: kuma-patch-ns-job
  namespace: kuma
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-install-missing-crds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
- kind: ServiceAccount
  name: kuma-install-missing-crds
  namespace: kuma
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-pre-delete-job
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
- kind: ServiceAccount
  name: kuma-pre-delete-job
  namespace: kuma
---
apiVersion: v1
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
kind: ConfigMap
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-control-plane-config
  namespace: kuma
---
apiVersion: v1
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing )"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
kind: ConfigMap
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-install-missing-crds-scripts
  namespace: kuma
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "5680"
    prometheus.io/scrape: "true"
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-control-plane
  namespace: kuma
spec:
  ports:
  - name: diagnostics
    port: 5680
  - name: http-api-server
    port: 5681
  - name: https-api-server
    port: 5682
  - name: https-admission-server
    port: 443
    targetPort: 5443
  - name: mads-server
    port: 5676
  - name: dp-server
    port: 5678
  selector:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kuma-egress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-egress
  namespace: kuma
spec:
  ports:
  - port: 10002
    protocol: TCP
    targetPort: 10002
  selector:
    app: kuma-egress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-ingress
  namespace: kuma
spec:
  ports:
  - port: 10001
    protocol: TCP
    targetPort: 10001
  selector:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-control-plane
  namespace: kuma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-control-plane
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: 155943293c759546a49f64d84eb30da4dd92f88f0562fbe5d93f4f36b2a1e29f
        checksum/tls-secrets: 52cf072ae012ed8a662b2329e3ee3bff9f58171c7d732169b2ee53b6dc07fd0c
      labels:
        app: kuma-control-plane
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.8.1
        helm.sh/chart: kuma-1.8.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - kuma
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - kuma
                - key: app
                  operator: In
                  values:
                  - kuma-control-plane
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: true
      containers:
      - args:
        - run
        - --log-level=info
        - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
        env:
        - name: KUMA_API_SERVER_AUTHN_LOCALHOST_IS_ADMIN
          value: "false"
        - name: KUMA_API_SERVER_READ_ONLY
          value: "true"
        - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
          value: "false"
        - name: KUMA_DP_SERVER_HDS_ENABLED
          value: "false"
        - name: KUMA_ENVIRONMENT
          value: kubernetes
        - name: KUMA_GENERAL_TLS_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.crt
        - name: KUMA_GENERAL_TLS_KEY_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.key
        - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-init:1.8.1
        - name: KUMA_MODE
          value: zone
        - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
          value: grpcs://100.64.110.16:5685
        - name: KUMA_MULTIZONE_ZONE_KDS_ROOT_CA_FILE
          value: /var/run/secrets/kuma.io/kds-client-tls-cert/ca.crt
        - name: KUMA_MULTIZONE_ZONE_NAME
          value: k3d-control
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
          value: /var/run/secrets/kuma.io/tls-cert
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
          value: "5443"
        - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
          value: kuma-control-plane
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
          value: "false"
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-dp:1.8.1
        - name: KUMA_RUNTIME_KUBERNETES_SERVICE_ACCOUNT_NAME
          value: system:serviceaccount:kuma:kuma-control-plane
        - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
          value: kuma
        - name: KUMA_STORE_TYPE
          value: kubernetes
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: docker.io/kumahq/kuma-cp:1.8.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthy
            port: 5680
        name: control-plane
        ports:
        - containerPort: 5680
          name: diagnostics
          protocol: TCP
        - containerPort: 5681
        - containerPort: 5682
        - containerPort: 5443
        - containerPort: 5678
        readinessProbe:
          httpGet:
            path: /ready
            port: 5680
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert/tls.crt
          name: general-tls-cert
          readOnly: true
          subPath: tls.crt
        - mountPath: /var/run/secrets/kuma.io/tls-cert/tls.key
          name: general-tls-cert
          readOnly: true
          subPath: tls.key
        - mountPath: /var/run/secrets/kuma.io/tls-cert/ca.crt
          name: general-tls-cert
          readOnly: true
          subPath: ca.crt
        - mountPath: /etc/kuma.io/kuma-control-plane
          name: kuma-control-plane-config
          readOnly: true
        - mountPath: /var/run/secrets/kuma.io/kds-client-tls-cert
          name: kds-client-tls-cert
          readOnly: true
      hostNetwork: false
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kuma-control-plane
      terminationGracePeriodSeconds: 30
      volumes:
      - name: general-tls-cert
        secret:
          secretName: kuma-tls-cert
      - name: kds-client-tls-cert
        secret:
          secretName: kds-ca-certs
      - configMap:
          name: kuma-control-plane-config
        name: kuma-control-plane-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-egress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-egress
  namespace: kuma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-egress
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        kuma.io/egress: enabled
      labels:
        app: kuma-egress
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.8.1
        helm.sh/chart: kuma-1.8.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - kuma
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - kuma
                - key: app
                  operator: In
                  values:
                  - kuma-egress
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - run
        - --log-level=info
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUMA_CONTROL_PLANE_URL
          value: https://kuma-control-plane.kuma:5678
        - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_DATAPLANE_NAME
          value: $(POD_NAME).$(POD_NAMESPACE)
        - name: KUMA_DATAPLANE_DRAIN_TIME
          value: 30s
        - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: KUMA_DATAPLANE_PROXY_TYPE
          value: egress
        image: docker.io/kumahq/kuma-dp:1.8.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 12
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 60
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: egress
        ports:
        - containerPort: 10002
        readinessProbe:
          failureThreshold: 12
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 1
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: kuma-tls-cert
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kuma-egress
      volumes:
      - name: kuma-tls-cert
        secret:
          secretName: kuma-tls-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-ingress
  namespace: kuma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-ingress
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        kuma.io/ingress: enabled
      labels:
        app: kuma-ingress
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.8.1
        helm.sh/chart: kuma-1.8.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - kuma
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - kuma
                - key: app
                  operator: In
                  values:
                  - kuma-ingress
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - run
        - --log-level=info
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUMA_CONTROL_PLANE_URL
          value: https://kuma-control-plane.kuma:5678
        - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_DATAPLANE_NAME
          value: $(POD_NAME).$(POD_NAMESPACE)
        - name: KUMA_DATAPLANE_DRAIN_TIME
          value: 30s
        - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: KUMA_DATAPLANE_PROXY_TYPE
          value: ingress
        image: docker.io/kumahq/kuma-dp:1.8.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 12
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 60
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: ingress
        ports:
        - containerPort: 10001
        readinessProbe:
          failureThreshold: 12
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 1
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: kuma-tls-cert
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kuma-ingress
      terminationGracePeriodSeconds: 30
      volumes:
      - name: kuma-tls-cert
        secret:
          secretName: kuma-tls-cert
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-delete-webhook
  namespace: kuma
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.8.1
        helm.sh/chart: kuma-1.8.1
      name: kuma-delete-webhook
    spec:
      containers:
      - command:
        - kubectl
        - delete
        - ValidatingWebhookConfiguration
        - kuma-validating-webhook-configuration
        image: kumahq/kubectl:v1.20.15
        name: pre-delete-job
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-pre-delete-job
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-install-missing-crds
  namespace: kuma
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.8.1
        helm.sh/chart: kuma-1.8.1
      name: kuma-install-missing-crds-job
    spec:
      containers:
      - command:
        - /kuma/scripts/install_missing_crds.sh
        image: kumahq/kubectl:v1.20.15
        name: pre-upgrade-job
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
          readOnly: true
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      initContainers:
      - command:
        - /kuma/scripts/save_missing_crds.sh
        image: docker.io/kumahq/kumactl:1.8.1
        name: pre-upgrade-job-init
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-install-missing-crds
      volumes:
      - configMap:
          defaultMode: 493
          name: kuma-install-missing-crds-scripts
        name: scripts
      - emptyDir: {}
        name: missing-crds
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-patch-ns
  namespace: kuma
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.8.1
        helm.sh/chart: kuma-1.8.1
      name: kuma-patch-ns-script
    spec:
      containers:
      - command:
        - kubectl
        - patch
        - namespace
        - kuma
        - --type
        - merge
        - --patch
        - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
        image: kumahq/kubectl:v1.20.15
        name: pre-install-job
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-patch-ns-job
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  name: kds-ca-certs
  namespace: kuma
spec:
  dataFrom:
  - extract:
      key: /dev/k3d-global/kuma-global
  refreshInterval: 60s
  secretStoreRef:
    kind: ClusterSecretStore
    name: dev
  target:
    name: kds-ca-certs
    template:
      data:
        ca.crt: '{{ index . "ca.crt" }}'
      type: Opaque
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  name: kuma-tls-cert
  namespace: kuma
spec:
  dataFrom:
  - extract:
      key: /dev/k3d-control/kuma-zone
  refreshInterval: 60s
  secretStoreRef:
    kind: ClusterSecretStore
    name: dev
  target:
    name: kuma-tls-cert
    template:
      data:
        ca.crt: '{{ index . "ca.crt" }}'
        tls.crt: '{{ index . "tls.crt" }}'
        tls.key: '{{ index . "tls.key" }}'
      type: Opaque
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxDZ0F3SUJBZ0lRVmFrY1RoQ2lEb3oyYVdVRXhDVk1jVEFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkcmRXMWhMV052Ym5SeWIyd3RjR3hoYm1VdWEzVnRZVEFlRncweU1qRXdNVE13TXpNMApNVEZhRncwek1qRXdNVEF3TXpNME1URmFNQ0l4SURBZUJnTlZCQU1URjJ0MWJXRXRZMjl1ZEhKdmJDMXdiR0Z1ClpTNXJkVzFoTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeEozN093L2NRRlYKQldQcTNOTUd6OGNvdjFlT0pOcVo1K0hudXZlSVdlQ0NjOWNQR2FIMzlBRkRNUVA3Q0FiT3drVzAzemZ4YnVnUQprSnF3RXpQd2FBK1FHdkdPK09FRVNENUJyeSthNEFyV0ZoZVFhOTZCdUhoN0pyUHVoczFJRnVwakFxc0M3dEtOCkQwczllNnA1Ry9GeTFmcXJ2RVlWWUxqaTIyTGp4d0tnb0ZHWm1yWXZ1MFcvK3FJNUM1OGF4R1Iwa21OUUI5VE0KTGU4K3V5ZmNoVnI2a2Iyb0ZHWUpneFNORjh6ZWxVWmJRbmlCWUFsU1dXWEVMZ21YaHVhNzl6ZkhkaVJQbWVqVgpoNktheWJWR3RrSEFBREdXY0tSdkpOMlhORDBqaTZmbDZQUGVJRjNianZ2SXFkTWhvckN2NjV1TUt4Q0lUSHp0Cjg1OXJ6R0JMOVFJREFRQUJvNEdaTUlHV01BNEdBMVVkRHdFQi93UUVBd0lDcERBVEJnTlZIU1VFRERBS0JnZ3IKQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRvZVc0VTFDcVRSbGtGTHNDdApKK2ZrQXdiRUZqQS9CZ05WSFJFRU9EQTJnaGRyZFcxaExXTnZiblJ5YjJ3dGNHeGhibVV1YTNWdFlZSWJhM1Z0CllTMWpiMjUwY205c0xYQnNZVzVsTG10MWJXRXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBLzl3YWEKWVpucTJQaTBmUk1Ma00velNHaDMwcys0OWZITW5JUWtGRVRiNisvZmNCazB6S2J6U3NGRy9obFB4YWdzRXdRTQpCcFZtUnNMV21YUVBzUUR3bUx4TnJDQ1g4NXFsLzJYdVJSdys2RmN3MzRhK252Y0VXWVpQUUJhUU83UGtSOVFCCmpPeGRqUGp3cVVSWWowTURVSVVkMVB6MzJJUTE5b3d6MHJieGtpRWxrNk1EOGlCMXFva3pzb0E3di9WR1Y4RGQKQU41NVNHM3hTbHE1bnFPU2N3NENMa2lGUmt2MnZDbUZnQ2phME05clJIMlR4U2lkNHRIOE96QkZlT09OL0hCRgpSb2ZTZmdvV21mbDUreDJ2K2Fpd2drK0d2WVY3ZHVBYkVkaFVOMFNRZDNkc282ZktaMUdIQ2tYbmhUMVFreDZoCmhRazlkcnFJczc1Umw3VUIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kuma-control-plane
      namespace: kuma
      path: /default-kuma-io-v1alpha1-mesh
  failurePolicy: Fail
  name: mesh.defaulter.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meshes
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxDZ0F3SUJBZ0lRVmFrY1RoQ2lEb3oyYVdVRXhDVk1jVEFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkcmRXMWhMV052Ym5SeWIyd3RjR3hoYm1VdWEzVnRZVEFlRncweU1qRXdNVE13TXpNMApNVEZhRncwek1qRXdNVEF3TXpNME1URmFNQ0l4SURBZUJnTlZCQU1URjJ0MWJXRXRZMjl1ZEhKdmJDMXdiR0Z1ClpTNXJkVzFoTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeEozN093L2NRRlYKQldQcTNOTUd6OGNvdjFlT0pOcVo1K0hudXZlSVdlQ0NjOWNQR2FIMzlBRkRNUVA3Q0FiT3drVzAzemZ4YnVnUQprSnF3RXpQd2FBK1FHdkdPK09FRVNENUJyeSthNEFyV0ZoZVFhOTZCdUhoN0pyUHVoczFJRnVwakFxc0M3dEtOCkQwczllNnA1Ry9GeTFmcXJ2RVlWWUxqaTIyTGp4d0tnb0ZHWm1yWXZ1MFcvK3FJNUM1OGF4R1Iwa21OUUI5VE0KTGU4K3V5ZmNoVnI2a2Iyb0ZHWUpneFNORjh6ZWxVWmJRbmlCWUFsU1dXWEVMZ21YaHVhNzl6ZkhkaVJQbWVqVgpoNktheWJWR3RrSEFBREdXY0tSdkpOMlhORDBqaTZmbDZQUGVJRjNianZ2SXFkTWhvckN2NjV1TUt4Q0lUSHp0Cjg1OXJ6R0JMOVFJREFRQUJvNEdaTUlHV01BNEdBMVVkRHdFQi93UUVBd0lDcERBVEJnTlZIU1VFRERBS0JnZ3IKQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRvZVc0VTFDcVRSbGtGTHNDdApKK2ZrQXdiRUZqQS9CZ05WSFJFRU9EQTJnaGRyZFcxaExXTnZiblJ5YjJ3dGNHeGhibVV1YTNWdFlZSWJhM1Z0CllTMWpiMjUwY205c0xYQnNZVzVsTG10MWJXRXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBLzl3YWEKWVpucTJQaTBmUk1Ma00velNHaDMwcys0OWZITW5JUWtGRVRiNisvZmNCazB6S2J6U3NGRy9obFB4YWdzRXdRTQpCcFZtUnNMV21YUVBzUUR3bUx4TnJDQ1g4NXFsLzJYdVJSdys2RmN3MzRhK252Y0VXWVpQUUJhUU83UGtSOVFCCmpPeGRqUGp3cVVSWWowTURVSVVkMVB6MzJJUTE5b3d6MHJieGtpRWxrNk1EOGlCMXFva3pzb0E3di9WR1Y4RGQKQU41NVNHM3hTbHE1bnFPU2N3NENMa2lGUmt2MnZDbUZnQ2phME05clJIMlR4U2lkNHRIOE96QkZlT09OL0hCRgpSb2ZTZmdvV21mbDUreDJ2K2Fpd2drK0d2WVY3ZHVBYkVkaFVOMFNRZDNkc282ZktaMUdIQ2tYbmhUMVFreDZoCmhRazlkcnFJczc1Umw3VUIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kuma-control-plane
      namespace: kuma
      path: /owner-reference-kuma-io-v1alpha1
  failurePolicy: Fail
  name: owner-reference.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - circuitbreakers
    - externalservices
    - faultinjections
    - healthchecks
    - meshgateways
    - meshgatewayroutes
    - proxytemplates
    - ratelimits
    - retries
    - timeouts
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxDZ0F3SUJBZ0lRVmFrY1RoQ2lEb3oyYVdVRXhDVk1jVEFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkcmRXMWhMV052Ym5SeWIyd3RjR3hoYm1VdWEzVnRZVEFlRncweU1qRXdNVE13TXpNMApNVEZhRncwek1qRXdNVEF3TXpNME1URmFNQ0l4SURBZUJnTlZCQU1URjJ0MWJXRXRZMjl1ZEhKdmJDMXdiR0Z1ClpTNXJkVzFoTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeEozN093L2NRRlYKQldQcTNOTUd6OGNvdjFlT0pOcVo1K0hudXZlSVdlQ0NjOWNQR2FIMzlBRkRNUVA3Q0FiT3drVzAzemZ4YnVnUQprSnF3RXpQd2FBK1FHdkdPK09FRVNENUJyeSthNEFyV0ZoZVFhOTZCdUhoN0pyUHVoczFJRnVwakFxc0M3dEtOCkQwczllNnA1Ry9GeTFmcXJ2RVlWWUxqaTIyTGp4d0tnb0ZHWm1yWXZ1MFcvK3FJNUM1OGF4R1Iwa21OUUI5VE0KTGU4K3V5ZmNoVnI2a2Iyb0ZHWUpneFNORjh6ZWxVWmJRbmlCWUFsU1dXWEVMZ21YaHVhNzl6ZkhkaVJQbWVqVgpoNktheWJWR3RrSEFBREdXY0tSdkpOMlhORDBqaTZmbDZQUGVJRjNianZ2SXFkTWhvckN2NjV1TUt4Q0lUSHp0Cjg1OXJ6R0JMOVFJREFRQUJvNEdaTUlHV01BNEdBMVVkRHdFQi93UUVBd0lDcERBVEJnTlZIU1VFRERBS0JnZ3IKQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRvZVc0VTFDcVRSbGtGTHNDdApKK2ZrQXdiRUZqQS9CZ05WSFJFRU9EQTJnaGRyZFcxaExXTnZiblJ5YjJ3dGNHeGhibVV1YTNWdFlZSWJhM1Z0CllTMWpiMjUwY205c0xYQnNZVzVsTG10MWJXRXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBLzl3YWEKWVpucTJQaTBmUk1Ma00velNHaDMwcys0OWZITW5JUWtGRVRiNisvZmNCazB6S2J6U3NGRy9obFB4YWdzRXdRTQpCcFZtUnNMV21YUVBzUUR3bUx4TnJDQ1g4NXFsLzJYdVJSdys2RmN3MzRhK252Y0VXWVpQUUJhUU83UGtSOVFCCmpPeGRqUGp3cVVSWWowTURVSVVkMVB6MzJJUTE5b3d6MHJieGtpRWxrNk1EOGlCMXFva3pzb0E3di9WR1Y4RGQKQU41NVNHM3hTbHE1bnFPU2N3NENMa2lGUmt2MnZDbUZnQ2phME05clJIMlR4U2lkNHRIOE96QkZlT09OL0hCRgpSb2ZTZmdvV21mbDUreDJ2K2Fpd2drK0d2WVY3ZHVBYkVkaFVOMFNRZDNkc282ZktaMUdIQ2tYbmhUMVFreDZoCmhRazlkcnFJczc1Umw3VUIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kuma-control-plane
      namespace: kuma
      path: /inject-sidecar
  failurePolicy: Fail
  name: namespace-kuma-injector.kuma.io
  namespaceSelector:
    matchLabels:
      kuma.io/sidecar-injection: enabled
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxDZ0F3SUJBZ0lRVmFrY1RoQ2lEb3oyYVdVRXhDVk1jVEFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkcmRXMWhMV052Ym5SeWIyd3RjR3hoYm1VdWEzVnRZVEFlRncweU1qRXdNVE13TXpNMApNVEZhRncwek1qRXdNVEF3TXpNME1URmFNQ0l4SURBZUJnTlZCQU1URjJ0MWJXRXRZMjl1ZEhKdmJDMXdiR0Z1ClpTNXJkVzFoTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeEozN093L2NRRlYKQldQcTNOTUd6OGNvdjFlT0pOcVo1K0hudXZlSVdlQ0NjOWNQR2FIMzlBRkRNUVA3Q0FiT3drVzAzemZ4YnVnUQprSnF3RXpQd2FBK1FHdkdPK09FRVNENUJyeSthNEFyV0ZoZVFhOTZCdUhoN0pyUHVoczFJRnVwakFxc0M3dEtOCkQwczllNnA1Ry9GeTFmcXJ2RVlWWUxqaTIyTGp4d0tnb0ZHWm1yWXZ1MFcvK3FJNUM1OGF4R1Iwa21OUUI5VE0KTGU4K3V5ZmNoVnI2a2Iyb0ZHWUpneFNORjh6ZWxVWmJRbmlCWUFsU1dXWEVMZ21YaHVhNzl6ZkhkaVJQbWVqVgpoNktheWJWR3RrSEFBREdXY0tSdkpOMlhORDBqaTZmbDZQUGVJRjNianZ2SXFkTWhvckN2NjV1TUt4Q0lUSHp0Cjg1OXJ6R0JMOVFJREFRQUJvNEdaTUlHV01BNEdBMVVkRHdFQi93UUVBd0lDcERBVEJnTlZIU1VFRERBS0JnZ3IKQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRvZVc0VTFDcVRSbGtGTHNDdApKK2ZrQXdiRUZqQS9CZ05WSFJFRU9EQTJnaGRyZFcxaExXTnZiblJ5YjJ3dGNHeGhibVV1YTNWdFlZSWJhM1Z0CllTMWpiMjUwY205c0xYQnNZVzVsTG10MWJXRXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBLzl3YWEKWVpucTJQaTBmUk1Ma00velNHaDMwcys0OWZITW5JUWtGRVRiNisvZmNCazB6S2J6U3NGRy9obFB4YWdzRXdRTQpCcFZtUnNMV21YUVBzUUR3bUx4TnJDQ1g4NXFsLzJYdVJSdys2RmN3MzRhK252Y0VXWVpQUUJhUU83UGtSOVFCCmpPeGRqUGp3cVVSWWowTURVSVVkMVB6MzJJUTE5b3d6MHJieGtpRWxrNk1EOGlCMXFva3pzb0E3di9WR1Y4RGQKQU41NVNHM3hTbHE1bnFPU2N3NENMa2lGUmt2MnZDbUZnQ2phME05clJIMlR4U2lkNHRIOE96QkZlT09OL0hCRgpSb2ZTZmdvV21mbDUreDJ2K2Fpd2drK0d2WVY3ZHVBYkVkaFVOMFNRZDNkc282ZktaMUdIQ2tYbmhUMVFreDZoCmhRazlkcnFJczc1Umw3VUIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kuma-control-plane
      namespace: kuma
      path: /inject-sidecar
  failurePolicy: Fail
  name: pods-kuma-injector.kuma.io
  objectSelector:
    matchLabels:
      kuma.io/sidecar-injection: enabled
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxDZ0F3SUJBZ0lRVmFrY1RoQ2lEb3oyYVdVRXhDVk1jVEFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkcmRXMWhMV052Ym5SeWIyd3RjR3hoYm1VdWEzVnRZVEFlRncweU1qRXdNVE13TXpNMApNVEZhRncwek1qRXdNVEF3TXpNME1URmFNQ0l4SURBZUJnTlZCQU1URjJ0MWJXRXRZMjl1ZEhKdmJDMXdiR0Z1ClpTNXJkVzFoTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeEozN093L2NRRlYKQldQcTNOTUd6OGNvdjFlT0pOcVo1K0hudXZlSVdlQ0NjOWNQR2FIMzlBRkRNUVA3Q0FiT3drVzAzemZ4YnVnUQprSnF3RXpQd2FBK1FHdkdPK09FRVNENUJyeSthNEFyV0ZoZVFhOTZCdUhoN0pyUHVoczFJRnVwakFxc0M3dEtOCkQwczllNnA1Ry9GeTFmcXJ2RVlWWUxqaTIyTGp4d0tnb0ZHWm1yWXZ1MFcvK3FJNUM1OGF4R1Iwa21OUUI5VE0KTGU4K3V5ZmNoVnI2a2Iyb0ZHWUpneFNORjh6ZWxVWmJRbmlCWUFsU1dXWEVMZ21YaHVhNzl6ZkhkaVJQbWVqVgpoNktheWJWR3RrSEFBREdXY0tSdkpOMlhORDBqaTZmbDZQUGVJRjNianZ2SXFkTWhvckN2NjV1TUt4Q0lUSHp0Cjg1OXJ6R0JMOVFJREFRQUJvNEdaTUlHV01BNEdBMVVkRHdFQi93UUVBd0lDcERBVEJnTlZIU1VFRERBS0JnZ3IKQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRvZVc0VTFDcVRSbGtGTHNDdApKK2ZrQXdiRUZqQS9CZ05WSFJFRU9EQTJnaGRyZFcxaExXTnZiblJ5YjJ3dGNHeGhibVV1YTNWdFlZSWJhM1Z0CllTMWpiMjUwY205c0xYQnNZVzVsTG10MWJXRXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBLzl3YWEKWVpucTJQaTBmUk1Ma00velNHaDMwcys0OWZITW5JUWtGRVRiNisvZmNCazB6S2J6U3NGRy9obFB4YWdzRXdRTQpCcFZtUnNMV21YUVBzUUR3bUx4TnJDQ1g4NXFsLzJYdVJSdys2RmN3MzRhK252Y0VXWVpQUUJhUU83UGtSOVFCCmpPeGRqUGp3cVVSWWowTURVSVVkMVB6MzJJUTE5b3d6MHJieGtpRWxrNk1EOGlCMXFva3pzb0E3di9WR1Y4RGQKQU41NVNHM3hTbHE1bnFPU2N3NENMa2lGUmt2MnZDbUZnQ2phME05clJIMlR4U2lkNHRIOE96QkZlT09OL0hCRgpSb2ZTZmdvV21mbDUreDJ2K2Fpd2drK0d2WVY3ZHVBYkVkaFVOMFNRZDNkc282ZktaMUdIQ2tYbmhUMVFreDZoCmhRazlkcnFJczc1Umw3VUIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kuma-control-plane
      namespace: kuma
      path: /inject-sidecar
  failurePolicy: Ignore
  name: kuma-injector.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.8.1
    helm.sh/chart: kuma-1.8.1
  name: kuma-validating-webhook-configuration
  namespace: kuma
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxDZ0F3SUJBZ0lRVmFrY1RoQ2lEb3oyYVdVRXhDVk1jVEFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkcmRXMWhMV052Ym5SeWIyd3RjR3hoYm1VdWEzVnRZVEFlRncweU1qRXdNVE13TXpNMApNVEZhRncwek1qRXdNVEF3TXpNME1URmFNQ0l4SURBZUJnTlZCQU1URjJ0MWJXRXRZMjl1ZEhKdmJDMXdiR0Z1ClpTNXJkVzFoTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeEozN093L2NRRlYKQldQcTNOTUd6OGNvdjFlT0pOcVo1K0hudXZlSVdlQ0NjOWNQR2FIMzlBRkRNUVA3Q0FiT3drVzAzemZ4YnVnUQprSnF3RXpQd2FBK1FHdkdPK09FRVNENUJyeSthNEFyV0ZoZVFhOTZCdUhoN0pyUHVoczFJRnVwakFxc0M3dEtOCkQwczllNnA1Ry9GeTFmcXJ2RVlWWUxqaTIyTGp4d0tnb0ZHWm1yWXZ1MFcvK3FJNUM1OGF4R1Iwa21OUUI5VE0KTGU4K3V5ZmNoVnI2a2Iyb0ZHWUpneFNORjh6ZWxVWmJRbmlCWUFsU1dXWEVMZ21YaHVhNzl6ZkhkaVJQbWVqVgpoNktheWJWR3RrSEFBREdXY0tSdkpOMlhORDBqaTZmbDZQUGVJRjNianZ2SXFkTWhvckN2NjV1TUt4Q0lUSHp0Cjg1OXJ6R0JMOVFJREFRQUJvNEdaTUlHV01BNEdBMVVkRHdFQi93UUVBd0lDcERBVEJnTlZIU1VFRERBS0JnZ3IKQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRvZVc0VTFDcVRSbGtGTHNDdApKK2ZrQXdiRUZqQS9CZ05WSFJFRU9EQTJnaGRyZFcxaExXTnZiblJ5YjJ3dGNHeGhibVV1YTNWdFlZSWJhM1Z0CllTMWpiMjUwY205c0xYQnNZVzVsTG10MWJXRXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBLzl3YWEKWVpucTJQaTBmUk1Ma00velNHaDMwcys0OWZITW5JUWtGRVRiNisvZmNCazB6S2J6U3NGRy9obFB4YWdzRXdRTQpCcFZtUnNMV21YUVBzUUR3bUx4TnJDQ1g4NXFsLzJYdVJSdys2RmN3MzRhK252Y0VXWVpQUUJhUU83UGtSOVFCCmpPeGRqUGp3cVVSWWowTURVSVVkMVB6MzJJUTE5b3d6MHJieGtpRWxrNk1EOGlCMXFva3pzb0E3di9WR1Y4RGQKQU41NVNHM3hTbHE1bnFPU2N3NENMa2lGUmt2MnZDbUZnQ2phME05clJIMlR4U2lkNHRIOE96QkZlT09OL0hCRgpSb2ZTZmdvV21mbDUreDJ2K2Fpd2drK0d2WVY3ZHVBYkVkaFVOMFNRZDNkc282ZktaMUdIQ2tYbmhUMVFreDZoCmhRazlkcnFJczc1Umw3VUIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kuma-control-plane
      namespace: kuma
      path: /validate-kuma-io-v1alpha1
  failurePolicy: Fail
  name: validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - circuitbreakers
    - dataplanes
    - externalservices
    - faultinjections
    - gatewayinstances
    - healthchecks
    - meshes
    - meshgateways
    - meshgatewayroutes
    - proxytemplates
    - ratelimits
    - retries
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
    - zones
    - containerpatches
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxDZ0F3SUJBZ0lRVmFrY1RoQ2lEb3oyYVdVRXhDVk1jVEFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkcmRXMWhMV052Ym5SeWIyd3RjR3hoYm1VdWEzVnRZVEFlRncweU1qRXdNVE13TXpNMApNVEZhRncwek1qRXdNVEF3TXpNME1URmFNQ0l4SURBZUJnTlZCQU1URjJ0MWJXRXRZMjl1ZEhKdmJDMXdiR0Z1ClpTNXJkVzFoTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeEozN093L2NRRlYKQldQcTNOTUd6OGNvdjFlT0pOcVo1K0hudXZlSVdlQ0NjOWNQR2FIMzlBRkRNUVA3Q0FiT3drVzAzemZ4YnVnUQprSnF3RXpQd2FBK1FHdkdPK09FRVNENUJyeSthNEFyV0ZoZVFhOTZCdUhoN0pyUHVoczFJRnVwakFxc0M3dEtOCkQwczllNnA1Ry9GeTFmcXJ2RVlWWUxqaTIyTGp4d0tnb0ZHWm1yWXZ1MFcvK3FJNUM1OGF4R1Iwa21OUUI5VE0KTGU4K3V5ZmNoVnI2a2Iyb0ZHWUpneFNORjh6ZWxVWmJRbmlCWUFsU1dXWEVMZ21YaHVhNzl6ZkhkaVJQbWVqVgpoNktheWJWR3RrSEFBREdXY0tSdkpOMlhORDBqaTZmbDZQUGVJRjNianZ2SXFkTWhvckN2NjV1TUt4Q0lUSHp0Cjg1OXJ6R0JMOVFJREFRQUJvNEdaTUlHV01BNEdBMVVkRHdFQi93UUVBd0lDcERBVEJnTlZIU1VFRERBS0JnZ3IKQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRvZVc0VTFDcVRSbGtGTHNDdApKK2ZrQXdiRUZqQS9CZ05WSFJFRU9EQTJnaGRyZFcxaExXTnZiblJ5YjJ3dGNHeGhibVV1YTNWdFlZSWJhM1Z0CllTMWpiMjUwY205c0xYQnNZVzVsTG10MWJXRXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBLzl3YWEKWVpucTJQaTBmUk1Ma00velNHaDMwcys0OWZITW5JUWtGRVRiNisvZmNCazB6S2J6U3NGRy9obFB4YWdzRXdRTQpCcFZtUnNMV21YUVBzUUR3bUx4TnJDQ1g4NXFsLzJYdVJSdys2RmN3MzRhK252Y0VXWVpQUUJhUU83UGtSOVFCCmpPeGRqUGp3cVVSWWowTURVSVVkMVB6MzJJUTE5b3d6MHJieGtpRWxrNk1EOGlCMXFva3pzb0E3di9WR1Y4RGQKQU41NVNHM3hTbHE1bnFPU2N3NENMa2lGUmt2MnZDbUZnQ2phME05clJIMlR4U2lkNHRIOE96QkZlT09OL0hCRgpSb2ZTZmdvV21mbDUreDJ2K2Fpd2drK0d2WVY3ZHVBYkVkaFVOMFNRZDNkc282ZktaMUdIQ2tYbmhUMVFreDZoCmhRazlkcnFJczc1Umw3VUIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kuma-control-plane
      namespace: kuma
      path: /validate-v1-service
  failurePolicy: Ignore
  name: service.validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxDZ0F3SUJBZ0lRVmFrY1RoQ2lEb3oyYVdVRXhDVk1jVEFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkcmRXMWhMV052Ym5SeWIyd3RjR3hoYm1VdWEzVnRZVEFlRncweU1qRXdNVE13TXpNMApNVEZhRncwek1qRXdNVEF3TXpNME1URmFNQ0l4SURBZUJnTlZCQU1URjJ0MWJXRXRZMjl1ZEhKdmJDMXdiR0Z1ClpTNXJkVzFoTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeEozN093L2NRRlYKQldQcTNOTUd6OGNvdjFlT0pOcVo1K0hudXZlSVdlQ0NjOWNQR2FIMzlBRkRNUVA3Q0FiT3drVzAzemZ4YnVnUQprSnF3RXpQd2FBK1FHdkdPK09FRVNENUJyeSthNEFyV0ZoZVFhOTZCdUhoN0pyUHVoczFJRnVwakFxc0M3dEtOCkQwczllNnA1Ry9GeTFmcXJ2RVlWWUxqaTIyTGp4d0tnb0ZHWm1yWXZ1MFcvK3FJNUM1OGF4R1Iwa21OUUI5VE0KTGU4K3V5ZmNoVnI2a2Iyb0ZHWUpneFNORjh6ZWxVWmJRbmlCWUFsU1dXWEVMZ21YaHVhNzl6ZkhkaVJQbWVqVgpoNktheWJWR3RrSEFBREdXY0tSdkpOMlhORDBqaTZmbDZQUGVJRjNianZ2SXFkTWhvckN2NjV1TUt4Q0lUSHp0Cjg1OXJ6R0JMOVFJREFRQUJvNEdaTUlHV01BNEdBMVVkRHdFQi93UUVBd0lDcERBVEJnTlZIU1VFRERBS0JnZ3IKQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRvZVc0VTFDcVRSbGtGTHNDdApKK2ZrQXdiRUZqQS9CZ05WSFJFRU9EQTJnaGRyZFcxaExXTnZiblJ5YjJ3dGNHeGhibVV1YTNWdFlZSWJhM1Z0CllTMWpiMjUwY205c0xYQnNZVzVsTG10MWJXRXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBLzl3YWEKWVpucTJQaTBmUk1Ma00velNHaDMwcys0OWZITW5JUWtGRVRiNisvZmNCazB6S2J6U3NGRy9obFB4YWdzRXdRTQpCcFZtUnNMV21YUVBzUUR3bUx4TnJDQ1g4NXFsLzJYdVJSdys2RmN3MzRhK252Y0VXWVpQUUJhUU83UGtSOVFCCmpPeGRqUGp3cVVSWWowTURVSVVkMVB6MzJJUTE5b3d6MHJieGtpRWxrNk1EOGlCMXFva3pzb0E3di9WR1Y4RGQKQU41NVNHM3hTbHE1bnFPU2N3NENMa2lGUmt2MnZDbUZnQ2phME05clJIMlR4U2lkNHRIOE96QkZlT09OL0hCRgpSb2ZTZmdvV21mbDUreDJ2K2Fpd2drK0d2WVY3ZHVBYkVkaFVOMFNRZDNkc282ZktaMUdIQ2tYbmhUMVFreDZoCmhRazlkcnFJczc1Umw3VUIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kuma-control-plane
      namespace: kuma
      path: /validate-v1-secret
  failurePolicy: Ignore
  name: secret.validator.kuma-admission.kuma.io
  namespaceSelector:
    matchLabels:
      kuma.io/system-namespace: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhRENDQWxDZ0F3SUJBZ0lRVmFrY1RoQ2lEb3oyYVdVRXhDVk1jVEFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkcmRXMWhMV052Ym5SeWIyd3RjR3hoYm1VdWEzVnRZVEFlRncweU1qRXdNVE13TXpNMApNVEZhRncwek1qRXdNVEF3TXpNME1URmFNQ0l4SURBZUJnTlZCQU1URjJ0MWJXRXRZMjl1ZEhKdmJDMXdiR0Z1ClpTNXJkVzFoTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeEozN093L2NRRlYKQldQcTNOTUd6OGNvdjFlT0pOcVo1K0hudXZlSVdlQ0NjOWNQR2FIMzlBRkRNUVA3Q0FiT3drVzAzemZ4YnVnUQprSnF3RXpQd2FBK1FHdkdPK09FRVNENUJyeSthNEFyV0ZoZVFhOTZCdUhoN0pyUHVoczFJRnVwakFxc0M3dEtOCkQwczllNnA1Ry9GeTFmcXJ2RVlWWUxqaTIyTGp4d0tnb0ZHWm1yWXZ1MFcvK3FJNUM1OGF4R1Iwa21OUUI5VE0KTGU4K3V5ZmNoVnI2a2Iyb0ZHWUpneFNORjh6ZWxVWmJRbmlCWUFsU1dXWEVMZ21YaHVhNzl6ZkhkaVJQbWVqVgpoNktheWJWR3RrSEFBREdXY0tSdkpOMlhORDBqaTZmbDZQUGVJRjNianZ2SXFkTWhvckN2NjV1TUt4Q0lUSHp0Cjg1OXJ6R0JMOVFJREFRQUJvNEdaTUlHV01BNEdBMVVkRHdFQi93UUVBd0lDcERBVEJnTlZIU1VFRERBS0JnZ3IKQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRvZVc0VTFDcVRSbGtGTHNDdApKK2ZrQXdiRUZqQS9CZ05WSFJFRU9EQTJnaGRyZFcxaExXTnZiblJ5YjJ3dGNHeGhibVV1YTNWdFlZSWJhM1Z0CllTMWpiMjUwY205c0xYQnNZVzVsTG10MWJXRXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBLzl3YWEKWVpucTJQaTBmUk1Ma00velNHaDMwcys0OWZITW5JUWtGRVRiNisvZmNCazB6S2J6U3NGRy9obFB4YWdzRXdRTQpCcFZtUnNMV21YUVBzUUR3bUx4TnJDQ1g4NXFsLzJYdVJSdys2RmN3MzRhK252Y0VXWVpQUUJhUU83UGtSOVFCCmpPeGRqUGp3cVVSWWowTURVSVVkMVB6MzJJUTE5b3d6MHJieGtpRWxrNk1EOGlCMXFva3pzb0E3di9WR1Y4RGQKQU41NVNHM3hTbHE1bnFPU2N3NENMa2lGUmt2MnZDbUZnQ2phME05clJIMlR4U2lkNHRIOE96QkZlT09OL0hCRgpSb2ZTZmdvV21mbDUreDJ2K2Fpd2drK0d2WVY3ZHVBYkVkaFVOMFNRZDNkc282ZktaMUdIQ2tYbmhUMVFreDZoCmhRazlkcnFJczc1Umw3VUIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kuma-control-plane
      namespace: kuma
      path: /validate-gatewayclass
  failurePolicy: Ignore
  name: gateway.validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - v1alpha2
    - v1beta1
    operations:
    - CREATE
    resources:
    - gatewayclasses
  sideEffects: None
